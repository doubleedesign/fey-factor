/* tslint:disable */



/**
 * AUTO-GENERATED FILE - DO NOT EDIT!
 *
 * This file was automatically generated by pg-to-ts v.4.1.1
 * $ pg-to-ts generate -c postgresql://username:password@localhost:5432/feyfactor -t connections -t movies -t people -t roles -t tv_shows -t works -s public
 *
 */


export type Json = unknown;

// Table connections
export interface Connection {
	id: number;
	person_id: number;
	work_id: number;
	role_id: number;
	episode_count: number | null;
}
export interface ConnectionInput {
	id?: number;
	person_id: number;
	work_id: number;
	role_id: number;
	episode_count?: number | null;
}
const connections = {
	tableName: 'connections',
	columns: ['id', 'person_id', 'work_id', 'role_id', 'episode_count'],
	requiredForInsert: ['person_id', 'work_id', 'role_id'],
	primaryKey: 'id',
	foreignKeys: {
		person_id: { table: 'people', column: 'id', $type: null as unknown as Person },
		work_id: { table: 'works', column: 'id', $type: null as unknown as Work },
		role_id: { table: 'roles', column: 'id', $type: null as unknown as Role },
	},
	$type: null as unknown as Connection,
	$input: null as unknown as ConnectionInput
} as const;

// Table movies
export interface Movie {
	id: number;
	title: string | null;
	type: string | null;
	release_year: number | null;
}
export interface MovieInput {
	id: number;
	title?: string | null;
	type?: string | null;
	release_year?: number | null;
}
const movies = {
	tableName: 'movies',
	columns: ['id', 'title', 'type', 'release_year'],
	requiredForInsert: ['id'],
	primaryKey: null,
	foreignKeys: {},
	$type: null as unknown as Movie,
	$input: null as unknown as MovieInput
} as const;

// Table people
export interface Person {
	id: number;
	name: string | null;
	degree: number | null;
}
export interface PersonInput {
	id: number;
	name?: string | null;
	degree?: number | null;
}
const people = {
	tableName: 'people',
	columns: ['id', 'name', 'degree'],
	requiredForInsert: ['id'],
	primaryKey: 'id',
	foreignKeys: {},
	$type: null as unknown as Person,
	$input: null as unknown as PersonInput
} as const;

// Table roles
export interface Role {
	id: number;
	name: string | null;
}
export interface RoleInput {
	id?: number;
	name?: string | null;
}
const roles = {
	tableName: 'roles',
	columns: ['id', 'name'],
	requiredForInsert: [],
	primaryKey: 'id',
	foreignKeys: {},
	$type: null as unknown as Role,
	$input: null as unknown as RoleInput
} as const;

// Table tv_shows
export interface TvShow {
	id: number;
	title: string | null;
	type: string | null;
	start_year: number | null;
	end_year: number | null;
	season_count: number | null;
	episode_count: number | null;
}
export interface TvShowInput {
	id: number;
	title?: string | null;
	type?: string | null;
	start_year?: number | null;
	end_year?: number | null;
	season_count?: number | null;
	episode_count?: number | null;
}
const tv_shows = {
	tableName: 'tv_shows',
	columns: ['id', 'title', 'type', 'start_year', 'end_year', 'season_count', 'episode_count'],
	requiredForInsert: ['id'],
	primaryKey: null,
	foreignKeys: {},
	$type: null as unknown as TvShow,
	$input: null as unknown as TvShowInput
} as const;

// Table works
export interface Work {
	id: number;
	title: string | null;
	type: string | null;
}
export interface WorkInput {
	id: number;
	title?: string | null;
	type?: string | null;
}
const works = {
	tableName: 'works',
	columns: ['id', 'title', 'type'],
	requiredForInsert: ['id'],
	primaryKey: 'id',
	foreignKeys: {},
	$type: null as unknown as Work,
	$input: null as unknown as WorkInput
} as const;


export interface TableTypes {
	connections: {
		select: Connection;
		input: ConnectionInput;
	};
	movies: {
		select: Movie;
		input: MovieInput;
	};
	people: {
		select: Person;
		input: PersonInput;
	};
	roles: {
		select: Role;
		input: RoleInput;
	};
	tv_shows: {
		select: TvShow;
		input: TvShowInput;
	};
	works: {
		select: Work;
		input: WorkInput;
	};
}

export const tables = {
	connections,
	movies,
	people,
	roles,
	tv_shows,
	works,
};
