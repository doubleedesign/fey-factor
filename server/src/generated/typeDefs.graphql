input WorkFilter {
	type: String
}
type Person {
	id: ID!
	name: String!
	degree: Int
	works(filter: WorkFilter): [Work]
	roles: [Role]
}
type Role {
	id: ID!
	name: String
	episode_count: Int
}
interface Work {
	id: ID!
	title: String
	rankingData: RankingData
	people: [Person]
	roles: [Role]
}
type RankingData {
	total_connections: Int
	average_degree: Float
	aggregate_episode_count: Int
	weighted_score: Float
}
type Movie implements Work {
	id: ID!
	title: String
	release_year: Int
	rankingData: RankingData
	people: [Person]
	roles: [Role]
}
type TvShow implements Work {
	id: ID!
	title: String
	start_year: Int
	end_year: Int
	season_count: Int
	episode_count: Int
	rankingData: RankingData
	people: [Person]
	roles: [Role]
}
